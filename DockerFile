# inherit from minimal notebook images provided by gpulab team
# FROM nvidia/cudagl:11.3.1-devel-ubuntu20.04
FROM nvidia/cudagl:11.4.2-devel-ubuntu20.04
# FROM haosulab/mani-skill2:latest

USER root

ENV DEBIAN_FRONTEND noninteractive

# Install base utilities
RUN apt-get update \
    && apt-get install -y build-essential \
    && apt-get install -y wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install miniconda
ENV CONDA_DIR /opt/conda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda

# Put conda in path so we can use conda activate
ENV PATH=$CONDA_DIR/bin:$PATH

RUN apt-get update && apt-get install -yq --no-install-recommends \
    bc \
    build-essential \
    cmake \
    curl \
    g++ \
    gfortran \
    git \
    libffi-dev \
    libfreetype6-dev \
    libhdf5-dev \
    libjpeg-dev \
    liblcms2-dev \
    libopenblas-dev \
    liblapack-dev \
    libssl-dev \
    libtiff5-dev \
    libwebp-dev \
    libzmq3-dev \
    nano \
    pkg-config \
    software-properties-common \
    screen \
    tmux \
    unzip \
    vim \
    wget \
    zlib1g-dev \
    qt5-default \
    libvtk6-dev \
    zlib1g-dev \
    libjpeg-dev \
    libwebp-dev \
    libtiff5-dev \
    libopenexr-dev \
    libgdal-dev \
    libdc1394-22-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libtheora-dev \
    libvorbis-dev \
    libxvidcore-dev \
    libx264-dev \
    yasm \
    libopencore-amrnb-dev \
    libopencore-amrwb-dev \
    libv4l-dev \
    libxine2-dev \
    libtbb-dev \
    libeigen3-dev \
    doxygen \
    ffmpeg \
    zip \
    swig \
    rsync \
    python3-pip \
    python3-dev \
    python-dev \
    xvfb && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

USER $NB_UID

# additional pip install libraries
RUN pip --no-cache-dir install --upgrade \
    gdown \
    imageio==2.23.0 \
    imageio-ffmpeg \
    moviepy \
    requests \
    box2d-py \
    gym==0.25.2 \
    opencv-python \
    librosa \
    line-profiler \
    pynput \
    pyquaternion \
    cached_property \
    wandb \
    hydra-core \
    hydra-submitit-launcher \
    dm_control \
    onnx \
    onnxruntime-gpu

# Install PyTorch packages
RUN pip install --quiet --no-cache-dir \
    'torch' \
    'torchvision' \
    'torchaudio' \
    'tensorboard' \
    -f https://download.pytorch.org/whl/cu116/torch_stable.html
#    fix-permissions "${CONDA_DIR}" && \
#    fix-permissions "/home/${NB_USER}"

RUN pip install -U 'git+https://github.com/facebookresearch/fvcore' && \
    pip install -U "git+https://github.com/facebookresearch/segment-anything.git" && \
    pip install ultralytics progressbar

RUN pip install -U "git+https://github.com/openai/CLIP.git" 

# install robosuite
RUN pip install robosuite  
RUN pip install numba
# metaworld
RUN pip install git+https://github.com/Farama-Foundation/Metaworld.git@master#egg=metaworld

# enable ssh and porting
USER root
EXPOSE 2222
EXPOSE 6000
EXPOSE 8088
ENV LANG=en_US.UTF-8
ENV PATH /opt/miniconda3/bin:$PATH

RUN apt-cache search mesa
RUN apt-get update && apt-get install -y libgl1-mesa-glx libosmesa6 libsm6 libxext6 libxrender-dev

# haven
RUN pip install --upgrade  git+https://github.com/haven-ai/haven-ai
RUN pip install --upgrade notebook==6.4.12 jupyter_contrib_nbextensions && \
    jupyter contrib nbextension install --user && \
    jupyter nbextension enable varInspector/main && \ 
    jupyter nbextension enable --py widgetsnbextension
WORKDIR /mnt/home
ENTRYPOINT ["/tk/bin/start.sh"]

RUN pip install numpy==1.22.0
RUN apt install -y sudo 

RUN pip install --force-reinstall torch==2.0.0+cu117 torchvision==0.15.0+cu117 --extra-index-url https://download.pytorch.org/whl/

# args CUDA+GroundingDINO
ARG USE_CUDA=0
ENV AM_I_DOCKER True
ENV BUILD_WITH_CUDA "${USE_CUDA}"
# torch.cuda.get_device_capability(0) = (7, 0) -> TORCH_CUDA_ARCH_LIST "7.0" 
ENV TORCH_CUDA_ARCH_LIST "7.0 7.2 8.0 8.6" 
ENV CUDA_HOME /usr/local/cuda-11.4/

RUN pip install wget

RUN pip install --no-cache-dir git+https://github.com/IDEA-Research/GroundingDINO.git

RUN pip install mani-skill2
RUN pip install numpy==1.23.5
RUN apt install -y rclone && \
    apt install -y fastjar

